{
  "name": "WebAssembly",
  "scopeName": "source.wasm",
  "fileTypes": [
    "wat"
  ],
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#string"
    },
    {
      "include": "#constants"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#variables"
    }
  ],
  "foldingStartMarker": "\\(\\s*$",
  "foldingStopMarker": "^\\s*\\)",
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line.semicolon.wasm",
          "begin": ";;",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.wasm"
            }
          },
          "end": "$"
        },
        {
          "name": "comment.block.wasm",
          "begin": "\\(;",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.wasm"
            }
          },
          "end": ";\\)"
        }
      ]
    },
    "string": {
      "name": "string.quoted.double.wasm",
      "begin": "(?<!\\\\)(\")",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.string.begin.wasm"
        }
      },
      "end": "(\")",
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.string.end.wasm"
        }
      },
      "patterns": [
        {
          "match": "\\\\.",
          "name": "constant.character.escape.wasm"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "match": "\\b(-?\\d+)",
          "name": "constant.numeric.int.wasm"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "match": "\\b(block|if|then|else|end)\\b",
          "name": "keyword.control.conditional.wasm"
        },
        {
          "match": "\\b(loop)\\b",
          "name": "keyword.control.loop.wasm"
        },
        {
          "match": "\\b(import|export)\\b",
          "name": "keyword.control.import.wasm"
        },
        {
          "match": "\\b(unreachable|nop|br|br_if|br_if_table|return|call|call_indirect|drop)\\b",
          "name": "keyword.control.flow.wasm"
        },
        {
          "match": "\\b(start)\\b",
          "name": "keyword.control.other.wasm"
        },
        {
          "match": "\\b(get_local|set_local|tee_local|get_global|set_global|const)\\b",
          "name": "storage.type.op.wasm"
        },
        {
          "match": "\\b(func|param|result)\\b",
          "name": "storage.type.definition.wasm"
        },
        {
          "match": "\\b(global|table|memory|data|type|elem)\\b",
          "name": "storage.type.definition.wasm"
        },
        {
          "match": "\\b(i32|i64|f32|f64)\\b",
          "name": "support.type.datatype.wasm"
        },
        {
          "match": "\\b(ctz|clz|popcnt)\\b",
          "name": "entity.name.function.unop.wasm"
        },
        {
          "match": "\\b(add|sub|mul)\\b",
          "name": "entity.name.function.binop.wasm"
        },
        {
          "match": "\\b(eq|ne|lt)\\b",
          "name": "entity.name.function.relop.wasm"
        },
        {
          "match": "(?<=\\(\\s*)module\\b",
          "name": "storage.type.module.wasm"
        }
      ]
    },
    "variables": {
      "name": "variable.other.wasm",
      "match": "(?<=\\s)\\$\\S+\\s"
    }
  }
}