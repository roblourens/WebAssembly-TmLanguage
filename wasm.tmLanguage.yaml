name: WebAssembly
scopeName: source.wasm
fileTypes: [wat]

patterns:
- include: '#comment'
- include: '#string'
- include: '#constants'
- include: '#keywords'

foldingStartMarker: '\(\s*$'
foldingStopMarker: '^\s*\)'

repository:
  comment:
    name: comment.line.semicolon.wasm
    begin: ';;'
    beginCaptures:
        '0': { name: punctuation.definition.comment.wasm }
    end: $
  string:
    name: string.quoted.double.wasm
    begin: (?<!\\)(")
    beginCaptures:
        '1': { name: punctuation.definition.string.begin.wasm }
    end: (")
    endCaptures:
        '1': { name: punctuation.definition.string.end.wasm }
    patterns:
      - match: \\.
        name: constant.character.escape.wasm
  constants:
    patterns:
      - match: \b(-?\d+)
        name: constant.numeric.int.wasm
  keywords:
    patterns:
      - match: (?<=(\s|\(|\[|\{))(block|loop|if|then|else|end)
        name: keyword.control.conditional.wasm
      - match: (?<=(\s|\(|\[|\{))(unreachable|get_local|set_local|tee_local|func|param|result|get_global|set_global|const)
        name: storage.type.wasm
      - match: \b(i32|i64|f32|f64)\b
        name: support.type.wasm
      - match: \b(ctz|clz|popcnt)\b
        name: entity.name.function.unop.wasm
      - match: \b(add|sub|mul)\b
        name: entity.name.function.binop.wasm
      - match: \b(eq|ne|lt)\b
        name: entity.name.function.relop.wasm